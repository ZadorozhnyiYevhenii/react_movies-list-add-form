{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/TextField/TextField.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","imgUrl","title","imdbUrl","description","className","src","alt","href","MoviesList","movies","map","imdbId","TextField","name","value","label","placeholder","required","onChange","useState","Math","random","toFixed","slice","id","touched","setTouched","isValid","setIsValid","hasError","pattern","htmlFor","type","classNames","event","target","onBlur","test","NewMovie","onAdd","count","setCount","setTitle","setDescription","setImgUrl","setImdbUrl","setImbdId","isError","trim","onSubmit","preventDefault","currentCount","disabled","App","moviesFromServer","setMovies","ReactDOM","render","document","getElementById"],"mappings":"mSAQaA,EAA6B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAEzCC,EAIED,EAJFC,OACAC,EAGEF,EAHFE,MACAC,EAEEH,EAFFG,QACAC,EACEJ,EADFI,YAGF,OACE,sBAAKC,UAAU,OAAO,UAAQ,aAA9B,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACEC,IAAKL,EACLM,IAAKL,QAIX,sBAAKG,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJC,IAAI,aAIV,qBAAKF,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAb,SAA2BH,SAI/B,sBAAKG,UAAU,UAAf,UACGD,EACD,uBACA,mBAAGI,KAAML,EAAT,0BAKT,ECvCYM,EAA8B,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACzC,qBAAKL,UAAU,SAAf,SACGK,EAAOC,KAAI,SAAAX,GAAK,OACf,cAAC,EAAD,CAEEA,MAAOA,GADFA,EAAMY,OAFE,KAFsB,E,gBCQpC,IAAMC,EAA6B,SAAC,GAOpC,IANLC,EAMI,EANJA,KACAC,EAKI,EALJA,MAKI,IAJJC,aAII,MAJIF,EAIJ,MAHJG,mBAGI,sBAHmBD,GAGnB,MAFJE,gBAEI,aADJC,gBACI,MADO,WAAQ,EACf,EACJ,EAAaC,oBAAS,2BAASN,EAAT,YAbfO,KAAKC,SACTC,QAAQ,IACRC,MAAM,GAWa,IAAfC,EAAP,oBAEA,EAA8BL,oBAAS,GAAvC,mBAAOM,EAAP,KAAgBC,EAAhB,KACA,EAA8BP,oBAAS,GAAvC,mBAAOQ,EAAP,KAAgBC,EAAhB,KACMC,EAAWJ,GAAWR,IAAaH,EAGnCgB,EAAU,uKAUhB,OACE,sBAAK1B,UAAU,QAAf,UACE,uBAAOA,UAAU,QAAQ2B,QAASP,EAAlC,SACGT,IAGH,qBAAKX,UAAU,UAAf,SACE,uBACE4B,KAAK,OACLR,GAAIA,EACJ,0BAAkBX,GAClBT,UAAW6B,IAAW,QAAS,CAC7B,YAAaJ,IAAaF,IAE5BX,YAAaA,EACbF,MAAOA,EACPI,SAAU,SAACgB,GAAD,OAAWhB,EAASgB,EAAMC,OAAOrB,MAAjC,EACVsB,OAzBW,WACJ,WAATvB,GAA8B,YAATA,GAA+B,WAATA,GAC7Ce,EAAWE,EAAQO,KAAKvB,IAG1BY,GAAYD,EACb,MAuBII,GACC,mBAAGzB,UAAU,iBAAb,mBAAkCW,EAAlC,oBAIP,EC7DYuB,EAA4B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC1C,EAA0BpB,mBAAS,GAAnC,mBAAOqB,EAAP,KAAcC,EAAd,KACA,EAA0BtB,mBAAS,IAAnC,mBAAOlB,EAAP,KAAcyC,EAAd,KACA,EAAsCvB,mBAAS,IAA/C,mBAAOhB,EAAP,KAAoBwC,EAApB,KACA,EAA4BxB,mBAAS,IAArC,mBAAOnB,EAAP,KAAe4C,EAAf,KACA,EAA8BzB,mBAAS,IAAvC,mBAAOjB,EAAP,KAAgB2C,EAAhB,KACA,EAA4B1B,mBAAS,IAArC,mBAAOR,EAAP,KAAemC,EAAf,KAEMC,GAAW9C,EAAM+C,SAAWhD,EAAOgD,SACrC9C,EAAQ8C,SAAWrC,EAAOqC,OA0B9B,OACE,uBACE5C,UAAU,WAEV6C,SApBiB,SAACf,GACpBA,EAAMgB,iBACNT,GAAS,SAAAU,GAAY,OAAIA,EAAe,CAAnB,IAUrBZ,EARqB,CACnBtC,QACAE,cACAH,SACAE,UACAS,WAhBF+B,EAAS,IACTC,EAAe,IACfC,EAAU,IACVC,EAAW,IACXC,EAAU,GAiBX,EAGC,UAKE,oBAAI1C,UAAU,QAAd,yBAEA,cAAC,EAAD,CACES,KAAK,QACLE,MAAM,QACND,MAAOb,EACPiB,SAAUwB,EACVzB,UAAQ,IAGV,cAAC,EAAD,CACEJ,KAAK,cACLE,MAAM,cACND,MAAOX,EACPe,SAAUyB,IAGZ,cAAC,EAAD,CACE9B,KAAK,SACLE,MAAM,YACND,MAAOd,EACPkB,SAAU0B,EACV3B,UAAQ,IAGV,cAAC,EAAD,CACEJ,KAAK,UACLE,MAAM,WACND,MAAOZ,EACPgB,SAAU2B,EACV5B,UAAQ,IAGV,cAAC,EAAD,CACEJ,KAAK,SACLE,MAAM,UACND,MAAOH,EACPO,SAAU4B,EACV7B,UAAQ,IAGV,qBAAKb,UAAU,mBAAf,SACE,qBAAKA,UAAU,UAAf,SACE,wBACE4B,KAAK,SACL,UAAQ,gBACR5B,UAAU,iBACVgD,SAAUL,EAJZ,uBA9CCP,EA0DV,E,OCjGYa,EAAM,WACjB,MAA4BlC,mBAASmC,GAArC,mBAAO7C,EAAP,KAAe8C,EAAf,KAEA,OACE,sBAAKnD,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAYK,OAAQA,MAEtB,qBAAKL,UAAU,UAAf,SACE,cAAC,EAAD,CAAUmC,MAAO,SAACxC,GAAD,OAAkBwD,EAAU,GAAD,mBAAK9C,GAAL,CAAaV,IAAxC,QAIxB,EChBDyD,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,Q","file":"static/js/main.928e9c39.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => {\n  const {\n    imgUrl,\n    title,\n    imdbUrl,\n    description,\n  } = movie;\n\n  return (\n    <div className=\"card\" data-cy=\"movie-card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={imgUrl}\n            alt={title}\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {description}\n          <br />\n          <a href={imdbUrl}>IMDB</a>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\n\ntype Props = {\n  name: string,\n  value: string,\n  label?: string,\n  placeholder?: string,\n  required?: boolean,\n  onChange?: (newValue: string) => void,\n};\n\nfunction getRandomDigits() {\n  return Math.random()\n    .toFixed(16)\n    .slice(2);\n}\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  label = name,\n  placeholder = `Enter ${label}`,\n  required = false,\n  onChange = () => {},\n}) => {\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n\n  const [touched, setTouched] = useState(false);\n  const [isValid, setIsValid] = useState(true);\n  const hasError = touched && required && !value;\n\n  // eslint-disable-next-line max-len\n  const pattern = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@,.\\w_]*)#?(?:[,.!/\\\\\\w]*))?)$/;\n\n  const handleBlur = () => {\n    if (name === 'imgUrl' || name === 'imdbUrl' || name === 'imdbId') {\n      setIsValid(pattern.test(value));\n    }\n\n    setTouched(!touched);\n  };\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          type=\"text\"\n          id={id}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': hasError || !isValid,\n          })}\n          placeholder={placeholder}\n          value={value}\n          onChange={(event) => onChange(event.target.value)}\n          onBlur={handleBlur}\n        />\n      </div>\n\n      {hasError && (\n        <p className=\"help is-danger\">{`${label} is required`}</p>\n      )}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { TextField } from '../TextField';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  onAdd: (movie: Movie) => void;\n};\n\nexport const NewMovie: React.FC<Props> = ({ onAdd }) => {\n  const [count, setCount] = useState(0);\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [imgUrl, setImgUrl] = useState('');\n  const [imdbUrl, setImdbUrl] = useState('');\n  const [imdbId, setImbdId] = useState('');\n\n  const isError = !title.trim() || !imgUrl.trim()\n  || !imdbUrl.trim() || !imdbId.trim();\n\n  const handleReset = () => {\n    setTitle('');\n    setDescription('');\n    setImgUrl('');\n    setImdbUrl('');\n    setImbdId('');\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    setCount(currentCount => currentCount + 1);\n\n    const movie: Movie = {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    };\n\n    onAdd(movie);\n    handleReset();\n  };\n\n  return (\n    <form\n      className=\"NewMovie\"\n      key={count}\n      onSubmit={handleSubmit}\n    >\n      <h2 className=\"title\">Add a movie</h2>\n\n      <TextField\n        name=\"title\"\n        label=\"Title\"\n        value={title}\n        onChange={setTitle}\n        required\n      />\n\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        value={description}\n        onChange={setDescription}\n      />\n\n      <TextField\n        name=\"imgUrl\"\n        label=\"Image URL\"\n        value={imgUrl}\n        onChange={setImgUrl}\n        required\n      />\n\n      <TextField\n        name=\"imdbUrl\"\n        label=\"Imdb URL\"\n        value={imdbUrl}\n        onChange={setImdbUrl}\n        required\n      />\n\n      <TextField\n        name=\"imdbId\"\n        label=\"Imdb ID\"\n        value={imdbId}\n        onChange={setImbdId}\n        required\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n            disabled={isError}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import './App.scss';\nimport { useState } from 'react';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState(moviesFromServer);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie onAdd={(movie: Movie) => setMovies([...movies, movie])} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}